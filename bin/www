#!/usr/bin/env node

const app = require("../app");
const debug = require("debug")("cv-builder:server");
const http = require("http");

const PORT = normalizePort(process.env.PORT || "3000");
app.set("port", PORT);

const server = http.createServer(app);
server.listen(PORT,()=>{
  console.log(`ðŸš€ Server running at http://localhost:${PORT}`);
  console.log(`ðŸš€ Server running at http://localhost:${PORT}`);
});
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

function onError(error) {
  if (error.syscall !== "listen") throw error;

  const bind = typeof PORT === "string" ? "Pipe " + PORT : "Port " + PORT;
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  console.log(`ðŸš€ Server running at http://localhost:${PORT}`);
  debug("Listening on " + bind);
}
